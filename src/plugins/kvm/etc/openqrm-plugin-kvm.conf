# this is the openQRM-plugin-kvm info file
#
# openQRM Enterprise developed by OPENQRM AUSTRALIA PTY LTD.
#
# All source code and content (c) Copyright 2021, OPENQRM AUSTRALIA PTY LTD unless specifically noted otherwise.
#
# This source code is released under the GNU General Public License version 2, unless otherwise agreed with OPENQRM AUSTRALIA PTY LTD.
# The latest version of this license can be found here: src/doc/LICENSE.txt
#
# By using this software, you acknowledge having read this license and agree to be bound thereby.
#
#           http://openqrm-enterprise.com
#
# Copyright 2021, OPENQRM AUSTRALIA PTY LTD <info@openqrm-enterprise.com>
#

OPENQRM_PLUGIN_VERSION="5.3.2.1"

# Those items setting up the dependencies for the package
if [ -f /etc/debian_version ]; then
	OPENQRM_PLUGIN_DEPENDENCIES="openqrm-server"
	OPENQRM_PLUGIN_BUILD_REQUIREMENTS=""
elif [ -f /etc/redhat-release ]; then
	OPENQRM_PLUGIN_DEPENDENCIES="openqrm-server"
	OPENQRM_PLUGIN_BUILD_REQUIREMENTS=""
elif [ -f /etc/SuSE-release ]; then
	OPENQRM_PLUGIN_DEPENDENCIES="openqrm-server"
	OPENQRM_PLUGIN_BUILD_REQUIREMENTS=""
fi

OPENQRM_PLUGIN_DESCRIPTION="Integrates the <a href='http://www.linux-kvm.org' target='_BLANK'>KVM</a> Virtualization Technology"
OPENQRM_PLUGIN_TYPE="virtualization"
# openQRM plugin-dependencies - the following plugins must be enabled
OPENQRM_PLUGIN_PLUGIN_DEPENDENCIES="local-server, device-manager, network-manager"

# required parameter to set the internal Kvm bridge
# by default openQRM will use the internal bridge eth0 for the virtual
# network-interface routed to the management/openQRM network on the Kvm vms.
OPENQRM_PLUGIN_KVM_BRIDGE_NET1=br0

# required parameter to set the external Kvm bridges
# by default openQRM will use external bridge eth0 for the virtual
# network-interface(s) routed to the public network (internet) on the Kvm vms
OPENQRM_PLUGIN_KVM_BRIDGE_NET2=br0
OPENQRM_PLUGIN_KVM_BRIDGE_NET3=br0
OPENQRM_PLUGIN_KVM_BRIDGE_NET4=br0
OPENQRM_PLUGIN_KVM_BRIDGE_NET5=br0

# the default nic type for the additional network cards
# supported values are : rtl8139, e1000, virtio
OPENQRM_PLUGIN_KVM_PRIMARY_NIC_TYPE=e1000
OPENQRM_PLUGIN_KVM_ADDITIONAL_NIC_TYPE=e1000

# using regular bridging or openvswitch for the virtual nics
# possible values are :
#  bridge - for regular bridging via bridge-utils
#  vlanbridge - for dynamically created VLAN bridges
#  openvswitch - using openvswitch for bridging
# OPENQRM_PLUGIN_KVM_BRIDGE_TYPE="openvswitch"
# OPENQRM_PLUGIN_KVM_BRIDGE_TYPE="vlanbridge"
OPENQRM_PLUGIN_KVM_BRIDGE_TYPE="bridge"

# for Blockfile-deployment only - location-name:directory for placing the blockfiles, space separated
OPENQRM_PLUGIN_KVM_FILE_BACKEND_DIRECTORIES="storage1:/var/lib/kvm/storage1 storage2:/var/lib/kvm/storage2"

# for KVM LVM deployment: automatically resize the filesystem on LVM snapshots + clones (true/false, default true)
# setting this option to true requires that the lvm volumes are installed with the root-filesytem on the first partition (no separated /boot dir for linux)
OPENQRM_PLUGIN_KVM_RESIZE_SNAPSHOTS_FILESYSTEM="true"

# KVM VMs by default are monitored through their Hosts.
# If openqrm-monitord is installed and running on the KVM VMs set the following paramter to false
OPENQRM_PLUGIN_KVM_VM_MONITORING_ON_HOST="true"

# Glusterfs default KVM image type (e.g. raw, qcow2)
OPENQRM_PLUGIN_KVM_DEFAULT_IMAGE_TYPE="raw"

# VM start delay when the Host is restarting in seconds. Adjust it to avoid overloading a Host when rebooting it
OPENQRM_PLUGIN_VM_AUTOSTART_DELAY=1

# defines on which network to listen for the VNC console access
# possible values:
#	all	- listen on all interfaces
#	onlyinternal - only listen on the internal openQRM management network
OPENQRM_PLUGIN_VM_VNC_LISTEN="all"

# defines the amount of swap space of the volume size in percent
# This option is for volume->clone which re-creates root + swap partition on the volume before resising
OPENQRM_PLUGIN_KVM_SWAP_PERCENT=5

# defines a local cache directory for caching the master images during clone actions
# please clean this directory in case of changes in the master images
OPENQRM_PLUGIN_KVM_LOCAL_IMAGE_CACHE="/var/cache/openqrm/kvm"

# creates a global lock for all lvm operations if set to true
OPENQRM_PLUGIN_KVM_GLOBAL_LVM_LOCK=false

# defines the Cloud action for creating a new volume. Can be snap or clone, default is clone
OPENQRM_PLUGIN_KVM_CLOUD_CREATE_VOLUME_ACTION=clone

# run e2fsck after clone finished true/false
OPENQRM_PLUGIN_KVM_E2FSCK_AFTER_CLONE="true"

# custom params for lvcreate eg. -i5
OPENQRM_PLUGIN_KVM_LVCREATE_CUSTOM_PARAM=""

# default vnc keymap for accessing the KVM VM console
OPENQRM_PLUGIN_KVM_DEFAULT_VNC_KEYMAP="en-us"

# ceph image feature configuration for add/create/clone
OPENQRM_PLUGIN_KVM_CEPH_IMAGE_FEATURE="--image-feature layering"

# If set the Management Network-card gets detached after the delay in seconds
# This is usefull for e.g. public openQRM Cloud where a permanrent connection to the openQRM Management network is not "wanted"
#OPENQRM_PLUGIN_VM_DETACH_MANAGEMENT_NIC=120

# files which should be taken to the state backup
OPENQRM_PLUGIN_STATE_FILES="$OPENQRM_SERVER_BASE_DIR/openqrm/plugins/kvm/etc/openqrm-plugin-kvm.conf"
# dirs which should be taken to the state backup
OPENQRM_PLUGIN_STATE_DIRS="/var/lib/kvm/openqrm/"
